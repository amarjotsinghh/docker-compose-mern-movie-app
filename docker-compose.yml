version: '3.8' # Specifies the version of Docker Compose syntax.

services: # Defines the application services (containers) to be run.
  
  frontend: # Service for the frontend application.
    build: 
      context: ./client # Specifies the build context to the client directory, where the frontend code is located.
    ports:
      - "80:80" # Maps port 80 on the host to port 80 on the container, allowing access via localhost:80.
    networks:
      - movie_app_network # Connects the frontend service to the movie_app_network for inter-service communication.
    depends_on:
      - backend # Ensures the backend service starts before the frontend.

  backend: # Service for the backend application.
    build: 
      context: ./server # Specifies the build context to the server directory, where the backend code is located.
    ports:
      - "3000:3000" # Maps port 3000 on the host to port 3000 on the container, allowing access via localhost:3000.
    networks:
      - movie_app_network # Connects the backend service to the movie_app_network for inter-service communication.
    depends_on:
      - mongo # Ensures the MongoDB service starts before the backend.

  mongo: # Service for the MongoDB database.
    image: mongo:latest # Uses the latest MongoDB Docker image from Docker Hub.
    container_name: mongo # Names the container "mongo" for easy reference.
    ports:
      - "27017:27017" # Maps port 27017 on the host to port 27017 on the container, allowing access via localhost:27017.
    volumes:
      - mongo_data:/data/db # Mounts the "mongo_data" volume to /data/db in the container for data persistence.
    networks:
      - movie_app_network # Connects MongoDB to the movie_app_network for inter-service communication.

networks: # Defines the networks used by the services.
  movie_app_network:
    external: true # Declares this network as external, assuming it has already been created outside of this file.

volumes: # Defines named volumes to store persistent data.
  mongo_data: # Creates a volume called mongo_data, which is used to persist MongoDB data.
